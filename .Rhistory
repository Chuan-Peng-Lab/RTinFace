library("nortest")
rt_dist <- fulldata %>%
group_by(user_id) %>%
summarize(rt = list(na.omit(rt))) %>%
mutate(rt_dist = map(rt, ecdf)) %>%
mutate(p_value = map_dbl(rt, function(x) ad.test(x, "exp")$p.value))
logLik_exponential <- function(params, x) {
n <- length(x)
-n*log(params) - sum(x)/params
}
result <- fulldata %>%
group_by(user_id) %>%
summarize(p_value = ad.test(rt, "exp")$p.value, .groups = "drop") %>%
filter(!is.na(p_value)) %>%
mutate(fit_result = map(rt, ~fitdistr(.x, "exponential")),
logLik = map_dbl(fit_result, ~logLik_exponential(.x$estimate, .x$data)),
AIC = map_dbl(fit_result, ~AIC(logLik = .x)),
BIC = map_dbl(fit_result, ~BIC(logLik = .x)))
exp_test <- fulldata %>%
group_by(user_id) %>%
summarize(p_value = ad.test(rt, "exponential")$p.value)
exp_test <- fulldata %>%
group_by(user_id) %>%
summarize(p_value = ad.test(rt, "exp")$p.value)
exp_test <- fulldata %>%
group_by(user_id) %>%
summarize(p_value = ad.test(rt, exp)$p.value)
exp_test <- fulldata %>%
group_by(user_id) %>%
summarize(p_value = ad.test(rt, "exp")$p.value)
exp_test <- fulldata %>%
group_by(user_id) %>%
summarize(p_value = ad.test(rt, "exponential")$p.value)
library("MASS")
library("tidyverse")
library("fitdistrplus")
library("nortest")
fulldata <- read.csv("data/psa001_ratings_raw_subset.csv")#这个文件哪里来的？我记不得了
stim_info = read.csv("data/stim_info.csv")
fulldata <-  full_join (fulldata, stim_info, by = 'stim_id')
fulldata <- fulldata[complete.cases(fulldata$rt), ]#去除NA的rt
fulldata <- fulldata %>%
filter(rt>0 & rt<10000)#删去负的和过长的反应时
fulldata %>%
ggplot(aes(x=rt))+
geom_histogram() +
xlab("Reaction Time") +
theme_bw()
fulldata$log_rt <- log(fulldata$rt)
fulldata %>%
ggplot(aes(x=log_rt))+
geom_histogram() +
xlab("Reaction Time") +
xlim(2.5,12.5)+
theme_bw()
#根据正态分布去除末尾的值
fulldata <- fulldata %>%
filter(rt>245)
fulldata %>%
ggplot(aes(x=log_rt))+
geom_histogram() +
xlab("Reaction Time") +
xlim(2.5,12.5)+
theme_bw()
# 从数据框中抽取50个样本
sampled_data <- sample(fulldata$user_id,50)
sampledata <- fulldata %>%
filter(user_id %in% sampled_data)
sampledata %>%
ggplot(aes(x=rt))+
geom_histogram()+
facet_wrap("~user_id")
fulldata <- read.csv("data/psa001_ratings_raw_subset.csv")#这个文件哪里来的？我记不得了
stim_info = read.csv("data/stim_info.csv")
fulldata <-  full_join (fulldata, stim_info, by = 'stim_id')
fulldata <- fulldata[complete.cases(fulldata$rt), ]#去除NA的rt
fulldata <- read.csv("data/psa001_ratings_raw_subset.csv")#这个文件哪里来的？我记不得了
stim_info = read.csv("data/stim_info.csv")
fulldata <-  full_join (fulldata, stim_info, by = 'stim_id')
fulldata <- fulldata[complete.cases(fulldata$rt), ]#去除NA的rt
#fulldata <- fulldata %>%
#  filter(rt>0 & rt<10000)#删去负的和过长的反应时
fulldata <- fulldata[complete.cases(fulldata$rt), ]#去除NA的rt
fulldata <- fulldata %>%
filter(rt>0 & rt<10000)#删去负的和过长的反应时
fulldata <- fulldata[complete.cases(fulldata$rt), ]#去除NA的rt
fulldata <- fulldata %>%
filter(rt>0 & rt<10000)#删去负的和过长的反应时
summary(fulldata)
fulldata <- fulldata[complete.cases(fulldata$rt), ]#去除NA的rt
fulldata <- fulldata %>%
filter(rt>0 & rt<10000) %>%
na.omit()#删去负的和过长的反应时
summary(fulldata)
fulldata <- fulldata[complete.cases(fulldata$rt), ]#去除NA的rt
fulldata <- fulldata %>%
filter(rt>0 & rt<10000) %>% #删去负的和过长的反应时
summary(fulldata)
fulldata <- read.csv("data/psa001_ratings_raw_subset.csv")#这个文件哪里来的？我记不得了
stim_info = read.csv("data/stim_info.csv")
fulldata <-  full_join (fulldata, stim_info, by = 'stim_id')
fulldata <- fulldata[complete.cases(fulldata$rt), ]#去除NA的rt
fulldata <- fulldata %>%
filter(rt>0 & rt<10000) %>% #删去负的和过长的反应时
summary(fulldata)
fulldata <- fulldata[complete.cases(fulldata$rt), ]#去除NA的rt
fulldata <- read.csv("data/psa001_ratings_raw_subset.csv")#这个文件哪里来的？我记不得了
stim_info = read.csv("data/stim_info.csv")
fulldata <-  full_join (fulldata, stim_info, by = 'stim_id')
fulldata <- fulldata[complete.cases(fulldata$rt), ]#去除NA的rt
fulldata <- fulldata %>%
filter(rt>0 & rt<10000) #删去负的和过长的反应时
summary(fulldata)
library("xgboost")
library("randomforest")
library("xgboost")
library("randomForest")
update.packages("randomForest")
library("tidyverse")
library("xgboost")
library("randomForest")
library("ranger")
library("MASS")
library("tidyverse")
library("fitdistrplus")
library("nortest")
library("purrr")
fulldata <- read.csv("data/psa001_ratings_raw_subset.csv")#这个文件哪里来的？我记不得了
stim_info = read.csv("data/stim_info.csv")
fulldata <-  full_join (fulldata, stim_info, by = 'stim_id')
fulldata <- fulldata[complete.cases(fulldata$rt), ]#去除NA的rt
fulldata <- fulldata %>%
filter(rt>0 & rt<10000) #删去负的和过长的反应时
summary(fulldata)
fulldata %>%
ggplot(aes(x=rt))+
geom_histogram() +
xlab("Reaction Time") +
theme_bw()
fulldata$log_rt <- log(fulldata$rt)
fulldata %>%
ggplot(aes(x=log_rt))+
geom_histogram() +
xlab("Reaction Time") +
xlim(2.5,12.5)+
theme_bw()
#根据正态分布去除末尾的值
fulldata <- fulldata %>%
filter(rt>245)
fulldata %>%
ggplot(aes(x=log_rt))+
geom_histogram() +
xlab("Reaction Time") +
xlim(2.5,12.5)+
theme_bw()
# 从数据框中抽取50个样本
sampled_data <- sample(fulldata$user_id,50)
sampledata <- fulldata %>%
filter(user_id %in% sampled_data)
sampledata %>%
ggplot(aes(x=rt))+
geom_histogram()+
facet_wrap("~user_id")
write.csv(fulldata,"./data/rt_tidy.csv")
View(fulldata)
# 将数据框按照被试编号进行分组，并将每个被试的反应时数据放在单独的数据框中
fulldata_grouped <- fulldata %>%
group_by(user_id) %>%
nest()
# 对每个数据框进行指数分布拟合，并将拟合参数添加到数据框中
result <- fulldata_grouped %>%
mutate(fit = map(data, ~ fitdistr(.x$rt, "exponential")),
estimate = map_dbl(fit, ~ exp(.$estimate[1])),
log_likelihood = map_dbl(fit, "loglik")) %>%
select(user_id, estimate, log_likelihood) %>%
arrange(desc(log_likelihood))
# 将数据框按照被试编号进行分组，并将每个被试的反应时数据放在单独的数据框中
fulldata_grouped <- fulldata %>%
group_by(user_id) %>%
nest()
# 对每个数据框进行指数分布拟合，并将拟合参数添加到数据框中
result <- fulldata_grouped %>%
mutate(fit = map(data, ~ fitdistr(.x$rt, "exponential")),
estimate = map_dbl(fit, ~ exp(.$estimate[1])),
log_likelihood = map_dbl(fit, "loglik")) %>%
select(user_id, estimate, log_likelihood) %>%
arrange(desc(log_likelihood))
# 将数据框按照被试编号进行分组，并将每个被试的反应时数据放在单独的数据框中
fulldata_grouped <- fulldata %>%
group_by(user_id) %>%
nest()
# 对每个数据框进行指数分布拟合，并将拟合参数添加到数据框中
result <- fulldata_grouped %>%
mutate(fit = map(data, ~ fitdistr(.x$rt, "exponential")),
estimate = map_dbl(fit, ~ exp(.$estimate[1])),
log_likelihood = map_dbl(fit, "loglik")) %>%
select("user_id", estimate, log_likelihood) %>%
arrange(desc(log_likelihood))
# 将数据框按照被试编号进行分组，并将每个被试的反应时数据放在单独的数据框中
fulldata_grouped <- fulldata %>%
group_by(user_id) %>%
nest()
# 对每个数据框进行指数分布拟合，并将拟合参数添加到数据框中
result <- fulldata_grouped %>%
mutate(fit = map(data, ~ fitdistr(.x$rt, "exponential")),
estimate = map_dbl(fit, ~ exp(.$estimate[1])),
log_likelihood = map_dbl(fit, "loglik")) %>%
select(user_id, estimate, log_likelihood) %>%
arrange(desc(log_likelihood))
a <- result %>%
filter(log_likelihood <= -2170) %>%
pull(user_id)
fulldata <- read.csv("data/psa001_ratings_raw_subset.csv")#这个文件哪里来的？我记不得了
stim_info = read.csv("data/stim_info.csv")#读取面孔信息
fulldata <-  full_join (fulldata, stim_info, by = 'stim_id')
fulldata <- fulldata[complete.cases(fulldata$rt), ]#去除NA的rt
fulldata <- fulldata %>%
filter(rt>0 & rt<10000) #删去负的和过长的反应时
summary(fulldata)
fulldata <- fulldata[complete.cases(fulldata$rt), ]#去除NA的rt
fulldata <- fulldata %>%
filter(rt>0 & rt<5000) #删去负的和过长的反应时
summary(fulldata)
fulldata %>%
ggplot(aes(x=rt))+
geom_histogram() +
xlab("Reaction Time") +
theme_bw()
fulldata$log_rt <- log(fulldata$rt)
fulldata %>%
ggplot(aes(x=log_rt))+
geom_histogram() +
xlab("Reaction Time") +
xlim(2.5,12.5)+
theme_bw()
#根据正态分布去除末尾的值
fulldata <- fulldata %>%
filter(rt>245)
fulldata %>%
ggplot(aes(x=log_rt))+
geom_histogram() +
xlab("Reaction Time") +
xlim(2.5,12.5)+
theme_bw()
#根据正态分布去除末尾的值
fulldata <- fulldata %>%
filter(rt>300)
fulldata %>%
ggplot(aes(x=log_rt))+
geom_histogram() +
xlab("Reaction Time") +
xlim(2.5,12.5)+
theme_bw()
fulldata <- read.csv("data/psa001_ratings_raw_subset.csv")#这个文件哪里来的？我记不得了
fulldata <- fulldata[complete.cases(fulldata$rt), ]#去除NA的rt
fulldata <- fulldata %>%
filter(rt>0 & rt<5000) #删去负的和过长的反应时
summary(fulldata)
fulldata <- fulldata[complete.cases(fulldata$rt), ]#去除NA的rt
fulldata <- fulldata %>%
filter(rt>0 & rt<10000) #删去负的和过长的反应时
summary(fulldata)
fulldata %>%
ggplot(aes(x=rt))+
geom_histogram() +
xlab("Reaction Time") +
theme_bw()
fulldata$log_rt <- log(fulldata$rt)
fulldata %>%
ggplot(aes(x=log_rt))+
geom_histogram() +
xlab("Reaction Time") +
xlim(2.5,12.5)+
theme_bw()
#根据正态分布去除末尾的值
fulldata <- fulldata %>%
filter(rt>300)
fulldata %>%
ggplot(aes(x=log_rt))+
geom_histogram() +
xlab("Reaction Time") +
xlim(2.5,12.5)+
theme_bw()
#根据正态分布去除末尾的值
fulldata <- fulldata %>%
filter(rt>400)
fulldata %>%
ggplot(aes(x=log_rt))+
geom_histogram() +
xlab("Reaction Time") +
xlim(2.5,12.5)+
theme_bw()
# 从数据框中抽取50个样本
sampled_data <- sample(fulldata$user_id,50)
sampledata <- fulldata %>%
filter(user_id %in% sampled_data)
sampledata %>%
ggplot(aes(x=rt))+
geom_histogram()+
facet_wrap("~user_id")
write.csv(fulldata,"./data/rt_tidy.csv")
# 将数据框按照被试编号进行分组，并将每个被试的反应时数据放在单独的数据框中
fulldata_grouped <- fulldata %>%
group_by(user_id) %>%
nest()
# 对每个数据框进行指数分布拟合，并将拟合参数添加到数据框中
result <- fulldata_grouped %>%
mutate(fit = map(data, ~ fitdistr(.x$rt, "exponential")),
estimate = map_dbl(fit, ~ exp(.$estimate[1])),
log_likelihood = map_dbl(fit, "loglik")) %>%
select(user_id, estimate, log_likelihood) %>%
arrange(desc(log_likelihood))
# 将数据框按照被试编号进行分组，并将每个被试的反应时数据放在单独的数据框中
fulldata_grouped <- fulldata %>%
group_by(user_id) %>%
nest()
# 对每个数据框进行指数分布拟合，并将拟合参数添加到数据框中
result <- fulldata_grouped %>%
mutate(fit = map(data, ~ fitdistr(.x$rt, "exponential")),
estimate = map_dbl(fit, ~ exp(.$estimate[1])),
log_likelihood = map_dbl(fit, "loglik")) %>%
select(., user_id, estimate, log_likelihood) %>%
arrange(desc(log_likelihood))
# 将数据框按照被试编号进行分组，并将每个被试的反应时数据放在单独的数据框中
fulldata_grouped <- fulldata %>%
group_by(user_id) %>%
nest()
# 对每个数据框进行指数分布拟合，并将拟合参数添加到数据框中
result <- fulldata_grouped %>%
mutate(fit = map(data, ~ fitdistr(.x$rt, "exponential")),
estimate = map_dbl(fit, ~ exp(.$estimate[1])),
log_likelihood = map_dbl(fit, "loglik")) %>%
#select(user_id, estimate, log_likelihood) %>%
arrange(desc(log_likelihood))
a <- result %>%
filter(log_likelihood <= -2170) %>%
pull(user_id)
odddata <- fulldata %>%
filter(user_id %in% a)
odddata %>%
ggplot(aes(x=rt))+
geom_histogram()+
facet_wrap("~user_id")
# 将数据框按照被试编号进行分组，并将每个被试的反应时数据放在单独的数据框中
fulldata_grouped <- fulldata %>%
group_by(user_id) %>%
nest()
# 对每个数据框进行指数分布拟合，并将拟合参数添加到数据框中
result <- fulldata_grouped %>%
mutate(fit = map(data, ~ fitdistr(.x$rt, "exponential")),
estimate = map_dbl(fit, ~ exp(.$estimate[1])),
log_likelihood = map_dbl(fit, "loglik")) %>%
select(user_id, estimate, log_likelihood) %>%
arrange(desc(log_likelihood))
# 将数据框按照被试编号进行分组，并将每个被试的反应时数据放在单独的数据框中
fulldata_grouped <- fulldata %>%
group_by(user_id) %>%
nest()
# 对每个数据框进行指数分布拟合，并将拟合参数添加到数据框中
result <- fulldata_grouped %>%
mutate(fit = map(data, ~ fitdistr(.x$rt, "exponential")),
estimate = map_dbl(fit, ~ exp(.$estimate[1])),
log_likelihood = map_dbl(fit, "loglik")) %>%
select(user_id, estimate, log_likelihood) %>%
arrange(desc(log_likelihood))
# 将数据框按照被试编号进行分组，并将每个被试的反应时数据放在单独的数据框中
fulldata_grouped <- fulldata %>%
group_by(user_id) %>%
nest()
# 对每个数据框进行指数分布拟合，并将拟合参数添加到数据框中
result <- fulldata_grouped %>%
mutate(fit = map(data, ~ fitdistr(.x$rt, "exponential")),
estimate = map_dbl(fit, ~ exp(.$estimate[1])),
log_likelihood = map_dbl(fit, "loglik")) %>%
select("user_id", "estimate", "log_likelihood") %>%
arrange(desc(log_likelihood))
fulldata <- lapply(fulldata, as.character)
write.csv(fulldata,"./data/rt_tidy.csv")
View(fulldata)
fulldata <- as.data.frame(lapply(fulldata, as.character), stringsAsFactors = FALSE)
write.csv(fulldata,"./data/rt_tidy.csv")
fulldata <- read.csv("data/TrainSet.csv")#这个文件哪里来的？我记不得了
fulldata <- fulldata[complete.cases(fulldata$rt), ]#去除NA的rt
fulldata <- fulldata %>%
filter(rt>0 & rt<10000) #删去负的和过长的反应时
summary(fulldata)
fulldata %>%
ggplot(aes(x=rt))+
geom_histogram() +
xlab("Reaction Time") +
theme_bw()
fulldata$log_rt <- log(fulldata$rt)
fulldata %>%
ggplot(aes(x=log_rt))+
geom_histogram() +
xlab("Reaction Time") +
xlim(2.5,12.5)+
theme_bw()
#根据正态分布去除末尾的值
fulldata <- fulldata %>%
filter(rt>245)
fulldata %>%
ggplot(aes(x=log_rt))+
geom_histogram() +
xlab("Reaction Time") +
xlim(2.5,12.5)+
theme_bw()
# 从数据框中抽取50个样本
sampled_data <- sample(fulldata$user_id,50)
sampledata <- fulldata %>%
filter(user_id %in% sampled_data)
sampledata %>%
ggplot(aes(x=rt))+
geom_histogram()+
facet_wrap("~user_id")
library("MASS")
library("tidyverse")
library("fitdistrplus")
library("nortest")
library("purrr")
fulldata <- read.csv("data/TrainSet.csv")#这个文件哪里来的？我记不得了
fulldata <- fulldata[complete.cases(fulldata$rt), ]#去除NA的rt
fulldata <- fulldata %>%
filter(rt>0 & rt<10000) #删去负的和过长的反应时
summary(fulldata)
fulldata %>%
ggplot(aes(x=rt))+
geom_histogram() +
xlab("Reaction Time") +
theme_bw()
fulldata$log_rt <- log(fulldata$rt)
fulldata %>%
ggplot(aes(x=log_rt))+
geom_histogram() +
xlab("Reaction Time") +
xlim(2.5,12.5)+
theme_bw()
#根据正态分布去除末尾的值
fulldata <- fulldata %>%
filter(rt>245)
fulldata %>%
ggplot(aes(x=log_rt))+
geom_histogram() +
xlab("Reaction Time") +
xlim(2.5,12.5)+
theme_bw()
# 从数据框中抽取50个样本
sampled_data <- sample(fulldata$user_id,50)
sampledata <- fulldata %>%
filter(user_id %in% sampled_data)
sampledata %>%
ggplot(aes(x=rt))+
geom_histogram()+
facet_wrap("~user_id")
write.csv(fulldata,"./data/rt_tidy.csv")
# 将数据框按照被试编号进行分组，并将每个被试的反应时数据放在单独的数据框中
fulldata_grouped <- fulldata %>%
group_by(user_id) %>%
nest()
# 对每个数据框进行指数分布拟合，并将拟合参数添加到数据框中
result <- fulldata_grouped %>%
mutate(fit = map(data, ~ fitdistr(.x$rt, "exponential")),
estimate = map_dbl(fit, ~ exp(.$estimate[1])),
log_likelihood = map_dbl(fit, "loglik")) %>%
#select(user_id, estimate, log_likelihood) %>%
arrange(desc(log_likelihood))
a <- result %>%
filter(log_likelihood <= -2170) %>%
pull(user_id)
odddata <- fulldata %>%
filter(user_id %in% a)
odddata %>%
ggplot(aes(x=rt))+
geom_histogram()+
facet_wrap("~user_id")
View(result)
a <- result %>%
filter(log_likelihood <= -280) %>%
pull(user_id)
odddata <- fulldata %>%
filter(user_id %in% a)
odddata %>%
ggplot(aes(x=rt))+
geom_histogram()+
facet_wrap("~user_id")
a <- result %>%
filter(log_likelihood <= -300) %>%
pull(user_id)
odddata <- fulldata %>%
filter(user_id %in% a)
odddata %>%
ggplot(aes(x=rt))+
geom_histogram()+
facet_wrap("~user_id")
library("tidyverse")
library("xgboost")
library("randomForest")
library("ranger")
fulldata <- read.csv("data/rt_tidy.csv")
View(fulldata)
rating_randomforest <- fulldata %>%
select("rating", "rt", "Race", "Gender","Age","trait")
rating_randomforest <- fulldata %>%
select(c("rating", "rt", "Race", "Gender","Age","trait"))
rating_randomforest <- fulldata %>%
select(rating, rt, Race, Gender, Age, trait))
rating_randomforest <- fulldata %>%
select(rating, rt, Race, Gender, Age, trait)
View(fulldata)
View(fulldata)
rating_randomforest <- select(fulldata, rating, rt, Race, Gender, Age, trait)
rating_randomforest <- select(fulldata,obj =  rating, rt, Race, Gender, Age, trait)
