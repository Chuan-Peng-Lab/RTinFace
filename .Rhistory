fulldata <- fulldata %>%
filter(abs(log_rt-mean(log_rt))<3*sd(log_rt))
fulldata %>%
ggplot(aes(x=log_rt))+
geom_histogram() +
xlab("Reaction Time") +
xlim(2.5,12.5)+
theme_bw()
#根据正态分布去除末尾的值
fulldata <- fulldata %>%
filter(abs(log_rt-mean(log_rt))<3*sd(log_rt))
fulldata %>%
ggplot(aes(x=log_rt))+
geom_histogram() +
xlab("Reaction Time") +
xlim(2.5,12.5)+
theme_bw()
#根据正态分布去除末尾的值
fulldata <- fulldata %>%
filter(abs(log_rt-mean(log_rt))<3*sd(log_rt))
fulldata %>%
ggplot(aes(x=log_rt))+
geom_histogram() +
xlab("Reaction Time") +
xlim(2.5,12.5)+
theme_bw()
#根据正态分布去除末尾的值
fulldata <- fulldata %>%
filter(abs(log_rt-mean(log_rt))<3*sd(log_rt))
fulldata %>%
ggplot(aes(x=log_rt))+
geom_histogram() +
xlab("Reaction Time") +
xlim(2.5,12.5)+
theme_bw()
#根据正态分布去除末尾的值
fulldata <- fulldata %>%
filter(abs(log_rt-mean(log_rt))<3*sd(log_rt))
fulldata %>%
ggplot(aes(x=log_rt))+
geom_histogram() +
xlab("Reaction Time") +
xlim(2.5,12.5)+
theme_bw()
#根据正态分布去除末尾的值
fulldata <- fulldata %>%
filter(abs(log_rt-mean(log_rt))<3*sd(log_rt))
fulldata %>%
ggplot(aes(x=log_rt))+
geom_histogram() +
xlab("Reaction Time") +
xlim(2.5,12.5)+
theme_bw()
#根据正态分布去除末尾的值
fulldata <- fulldata %>%
filter(abs(log_rt-mean(log_rt))<3*sd(log_rt))
fulldata %>%
ggplot(aes(x=log_rt))+
geom_histogram() +
xlab("Reaction Time") +
xlim(2.5,12.5)+
theme_bw()
#根据正态分布去除末尾的值
fulldata <- fulldata %>%
filter(abs(log_rt-mean(log_rt))<3*sd(log_rt))
fulldata %>%
ggplot(aes(x=log_rt))+
geom_histogram() +
xlab("Reaction Time") +
xlim(2.5,12.5)+
theme_bw()
View(fulldata)
#根据正态分布去除末尾的值
fulldata <- fulldata %>%
filter(abs(log_rt-mean(log_rt))<3*sd(log_rt))
fulldata %>%
ggplot(aes(x=log_rt))+
geom_histogram() +
xlab("Reaction Time") +
xlim(2.5,12.5)+
theme_bw()
fulldata$log_rt <- log(fulldata$rt)
fulldata %>%
ggplot(aes(x=log_rt))+
geom_histogram() +
xlab("Reaction Time") +
xlim(2.5,12.5)+
theme_bw()
fulldata %>%
ggplot(aes(x=rt))+
geom_histogram() +
xlab("Reaction Time") +
theme_bw()
fulldata <- read.csv("data/TrainSet.csv")#这个文件哪里来的？我记不得了
fulldata <- fulldata[complete.cases(fulldata$rt), ]#去除NA的rt
fulldata <- fulldata %>%
filter(rt>0 & rt<10000) #删去负的和过长的反应时
summary(fulldata)
fulldata <- fulldata[complete.cases(fulldata$rt), ]#去除NA的rt
fulldata <- fulldata %>%
filter(rt>0 & rt<10000) #删去负的和过长的反应时
fulldata <- fulldata[complete.cases(fulldata$rt), ]#去除NA的rt
fulldata <- fulldata %>%
filter(rt>0 & rt<10000) #删去负的和过长的反应时
#根据正态分布去除末尾的值
fulldata <- fulldata %>%
filter(rt>245)
fulldata %>%
ggplot(aes(x=log_rt))+
geom_histogram() +
xlab("Reaction Time") +
xlim(2.5,12.5)+
theme_bw()
fulldata$log_rt <- log(fulldata$rt)
fulldata %>%
ggplot(aes(x=log_rt))+
geom_histogram() +
xlab("Reaction Time") +
xlim(2.5,12.5)+
theme_bw()
#根据正态分布去除末尾的值
fulldata <- fulldata %>%
filter(rt>245)
fulldata %>%
ggplot(aes(x=log_rt))+
geom_histogram() +
xlab("Reaction Time") +
xlim(2.5,12.5)+
theme_bw()
#根据正态分布去除末尾的值
fulldata <- fulldata %>%
filter(rt>245)
fulldata %>%
ggplot(aes(x=log_rt))+
geom_histogram() +
xlab("Reaction Time") +
xlim(2.5,12.5)+
theme_bw()
fulldata <- read.csv("data/TrainSet.csv")#这个文件哪里来的？我记不得了
fulldata <- fulldata[complete.cases(fulldata$rt), ]#去除NA的rt
fulldata <- fulldata %>%
filter(rt>0 & rt<10000) #删去负的和过长的反应时
fulldata %>%
ggplot(aes(x=rt))+
geom_histogram() +
xlab("Reaction Time") +
theme_bw()
fulldata$log_rt <- log(fulldata$rt)
fulldata %>%
ggplot(aes(x=log_rt))+
geom_histogram() +
xlab("Reaction Time") +
xlim(2.5,12.5)+
theme_bw()
#根据正态分布去除末尾的值
fulldata <- fulldata %>%
filter(abs(log_rt-mean(log_rt))<3*sd(log_rt))
fulldata %>%
ggplot(aes(x=log_rt))+
geom_histogram() +
xlab("Reaction Time") +
xlim(2.5,12.5)+
theme_bw()
# 从数据框中抽取50个样本
sampled_data <- sample(fulldata$user_id,50)
sampledata <- fulldata %>%
filter(user_id %in% sampled_data)
sampledata %>%
ggplot(aes(x=rt))+
geom_histogram()+
facet_wrap("~user_id")
write.csv(fulldata,"./data/rt_tidy.csv")
library("tidyverse")
library("xgboost")
library("randomForest")
library("ranger")
library("cowplot")
set.seed(1122)
fulldata <- read.csv("data/rt_tidy.csv")
ranger_model <- fulldata %>%
dplyr::select(rating, rt, Race, Gender, Age, trait)
rf <- ranger(dependent.variable.name = "rating",
data = ranger_model, # 指定训练数据集
num.trees = 1000, # 指定树的数量
mtry = 3, # 指定每个树节点随机选择的属性数量
importance = "permutation",  # 指定特征重要性估计的方法
sample.fraction = 0.7,  # 指定随机采样的比例
verbose = TRUE
)
rf_importance <- importance(rf)
importance_df <- data.frame(feature = names(rf$variable.importance),
importance = rf$variable.importance)
new <- ggplot(importance_df, aes(x = reorder(feature,importance), y = importance)) +
geom_bar(stat = "identity", fill = "steelblue") +
ggtitle("Feature Importance Plot") +
coord_flip()+
xlab("Features") +
geom_text(aes(label = importance), size=3, hjust = 0.8)+
ylab("Importance")
new
rf_importance <- importance(rf)
importance_df <- data.frame(feature = names(rf$variable.importance),
importance = rf$variable.importance)
new <- ggplot(importance_df, aes(x = reorder(feature,importance), y = importance)) +
geom_bar(stat = "identity", fill = "steelblue") +
ggtitle("Feature Importance Plot") +
coord_flip()+
xlab("Features") +
geom_text(aes(label = importance), size=3, hjust = 0.8)+
ylab("Importance")
new
ranger_model <- fulldata %>%
dplyr::select(rating, rt, Race, Gender, Age, trait)
drop_na(c(sex,age,country)) %>%
mutate(Race = as.factor(Race),
Gender = as.factor(Gender),
trait = as.factor(trait),
stim_id = as.factor(stim_id),
sex = as.factor(sex),
country = as.factor(country),
language = as.factor(language),
lab = as.factor(lab),
user_id = as.factor(user_id)) %>%
mutate(rating = as.numeric(rating),
rt = as.numeric(rt),
Age = as.numeric(Age),
age = as.numeric(age)
) %>%
dplyr::select(rating, rt, Race, Gender, Age, trait, stim_id, sex, age, country, language, lab, user_id)
library("tidyverse")
library("randomForest")
library("ranger")
library("cowplot")
set.seed(1122)
fulldata <- read.csv("data/rt_tidy.csv")
olddata <- read.csv("data/TrainSet.csv")
ranger_model <- fulldata %>%
drop_na(c(sex,age,country)) %>%
mutate(Race = as.factor(Race),
Gender = as.factor(Gender),
trait = as.factor(trait),
stim_id = as.factor(stim_id),
sex = as.factor(sex),
country = as.factor(country),
language = as.factor(language),
lab = as.factor(lab),
user_id = as.factor(user_id)) %>%
mutate(rating = as.numeric(rating),
rt = as.numeric(rt),
Age = as.numeric(Age),
age = as.numeric(age)
) %>%
dplyr::select(rating, rt, Race, Gender, Age, trait, stim_id, sex, age, country, language, lab, user_id)
rf <- ranger(dependent.variable.name = "rating",
data = ranger_model, # 指定训练数据集
num.trees = 1000, # 指定树的数量
mtry = 3, # 指定每个树节点随机选择的属性数量
importance = "permutation",  # 指定特征重要性估计的方法
sample.fraction = 0.7,  # 指定随机采样的比例
verbose = TRUE
)
rf_importance <- importance(rf)
importance_df <- data.frame(feature = names(rf$variable.importance),
importance = rf$variable.importance)
new <-
ggplot(data = importance_df, aes(x = reorder(feature,importance), y = importance)) +
geom_bar(stat = "identity", fill = "steelblue", width = 0.5) +
#geom_point(stat = "identity", color = "steelblue") +
geom_hline(yintercept = abs(min(rf_importance)), linetype = "dotted", color = "red", linewidth = 0.8) +
ggtitle("Feature Importance Plot") +
coord_flip()+
xlab("Features") +
#geom_text(aes(label = importance), size=3, hjust = 0.8)+
ylab("Importance") +
theme_classic()
new
library("tidyverse")
fulldata <- read.csv("data/rt_tidy.csv")
fulldata <- read.csv("data/rt_tidy.csv")
lan <- fulldata %>%
group_by(language) %>%
summarise(N=n())
#view(lan)
lan %>%
ggplot(aes(x=reorder(language,N),y=N,fill=N))+
geom_col()+
coord_flip()+
theme_minimal()
View(fulldata)
fulldata %>%
mutate(rating = as.factor(rating)) %>%
ggplot(aes(x=rating))+
geom_density()+
theme_classic()
fulldata %>%
mutate(rating = as.factor(rating)) %>%
ggplot(aes(x=rating, fill = country))+
geom_density()+
theme_classic()
fulldata %>%
mutate(rating = as.factor(rating)) %>%
drop_na(country) %>%
ggplot(aes(x=rating, fill = country))+
geom_density()+
theme_classic()
fulldata %>%
mutate(rating = as.factor(rating)) %>%
mutate(trait = as.factor(trait)) %>%
drop_na(country) %>%
ggplot(aes(x=rating, fill = trait))+
facet_wrap(~country)+
geom_density()+
theme_classic()
fulldata %>%
mutate(rating = as.factor(rating)) %>%
mutate(trait = as.factor(trait)) %>%
drop_na(country) %>%
ggplot(aes(x=rating, fill = trait))+
facet_grid(~country)+
geom_density()+
theme_classic()
fulldata %>%
mutate(rating = as.factor(rating)) %>%
mutate(trait = as.factor(trait)) %>%
drop_na(country) %>%
ggplot(aes(x=rating, fill = trait))+
facet_wrap(~country)+
geom_density()+
theme_classic()
fulldata %>%
mutate(rating = as.factor(rating)) %>%
mutate(trait = as.factor(trait)) %>%
mutate(country = as.factor(country)) %>%
drop_na(country) %>%
ggplot(aes(x=rating, fill = trait))+
facet_wrap(~country)+
geom_density()+
theme_classic()
fulldata %>%
mutate(rating = as.factor(rating)) %>%
mutate(trait = as.factor(trait)) %>%
mutate(country = as.factor(country)) %>%
drop_na(country) %>%
ggplot(aes(x=rating, fill = trait))+
facet_wrap(~country)+
geom_density()+
theme_classic()
fulldata %>%
mutate(rating = as.factor(rating)) %>%
mutate(trait = as.factor(trait)) %>%
mutate(country = as.factor(country)) %>%
drop_na(country) %>%
ggplot(aes(x=rating, fill = country))+
facet_wrap(~country)+
geom_density()+
theme_classic()
fulldata %>%
mutate(rating = as.factor(rating)) %>%
mutate(trait = as.factor(trait)) %>%
mutate(country = as.factor(country)) %>%
drop_na(country) %>%
ggplot(aes(x=rating))+
facet_wrap(~country)+
geom_density()+
theme_classic()
fulldata %>%
mutate(rating = as.factor(rating)) %>%
mutate(trait = as.factor(trait)) %>%
mutate(country = as.factor(country)) %>%
drop_na(country) %>%
ggplot(aes(x=rating,y = density))+
facet_wrap(~country)+
geom_density()+
theme_classic()
fulldata %>%
mutate(rating = as.factor(rating)) %>%
mutate(trait = as.factor(trait)) %>%
mutate(country = as.factor(country)) %>%
drop_na(country) %>%
ggplot(aes(x=rating,y = density))+
facet_wrap(~country)+
geom_bar()+
theme_classic()
fulldata %>%
mutate(rating = as.factor(rating)) %>%
mutate(trait = as.factor(trait)) %>%
mutate(country = as.factor(country)) %>%
drop_na(country) %>%
ggplot(aes(x=rating))+
facet_wrap(~country)+
geom_bar()+
theme_classic()
fulldata %>%
mutate(rating = as.factor(rating)) %>%
mutate(trait = as.factor(trait)) %>%
mutate(country = as.factor(country)) %>%
drop_na(country) %>%
filter(country != "--")
ggplot(aes(x=rating))+
facet_wrap(~country)+
geom_bar()+
theme_classic()
fulldata %>%
mutate(rating = as.factor(rating)) %>%
mutate(trait = as.factor(trait)) %>%
mutate(country = as.factor(country)) %>%
drop_na(country) %>%
filter(country != "--") %>%
ggplot(aes(x=rating))+
facet_wrap(~country)+
geom_bar()+
theme_classic()
fulldata %>%
mutate(rating = as.factor(rating)) %>%
mutate(trait = as.factor(trait)) %>%
mutate(country = as.factor(country)) %>%
drop_na(country) %>%
filter(country != "--") %>%
ggplot(aes(x=rating))+
facet_wrap(~country)+
geom_density(fill = country)+
theme_classic()
fulldata %>%
mutate(rating = as.factor(rating)) %>%
mutate(trait = as.factor(trait)) %>%
mutate(country = as.factor(country)) %>%
drop_na(country) %>%
filter(country != "--") %>%
ggplot(aes(x=rating))+
facet_wrap(~country)+
geom_density(fill = "country")+
theme_classic()
fulldata %>%
mutate(rating = as.factor(rating)) %>%
mutate(trait = as.factor(trait)) %>%
mutate(country = as.factor(country)) %>%
drop_na(country) %>%
filter(country != "--") %>%
ggplot(aes(x=rating))+
facet_wrap(~country)+
geom_density(fill = country)+
theme_classic()
fulldata %>%
mutate(rating = as.factor(rating)) %>%
mutate(trait = as.factor(trait)) %>%
mutate(country = as.factor(country)) %>%
drop_na(country) %>%
filter(country != "--") %>%
ggplot(aes(x=rating))+
facet_wrap(~country)+
geom_density(fill = "country")+
theme_classic()
fulldata %>%
mutate(rating = as.factor(rating)) %>%
mutate(trait = as.factor(trait)) %>%
mutate(country = as.factor(country)) %>%
drop_na(country) %>%
filter(country != "--") %>%
ggplot(aes(x=rating))+
facet_wrap(~country)+
geom_density(fill = country)+
theme_classic()
fulldata %>%
mutate(rating = as.factor(rating)) %>%
mutate(trait = as.factor(trait)) %>%
mutate(country = as.factor(country)) %>%
drop_na(country) %>%
filter(country != "--") %>%
ggplot(aes(x=rating))+
facet_wrap(~country)+
geom_density(color = country)+
theme_classic()
fulldata %>%
mutate(rating = as.factor(rating)) %>%
mutate(trait = as.factor(trait)) %>%
mutate(country = as.factor(country)) %>%
drop_na(country) %>%
filter(country != "--") %>%
ggplot(aes(x=rating,color = country))+
facet_wrap(~country)+
geom_density()+
theme_classic()
fulldata %>%
mutate(rating = as.numeric(rating)) %>%
mutate(trait = as.factor(trait)) %>%
mutate(country = as.factor(country)) %>%
drop_na(country) %>%
filter(country != "--") %>%
ggplot(aes(x=rating,color = country))+
facet_wrap(~country)+
geom_density()+
theme_classic()
fulldata %>%
mutate(rating = as.numeric(rating)) %>%
mutate(trait = as.factor(trait)) %>%
mutate(country = as.factor(country)) %>%
drop_na(country) %>%
filter(country != "--") %>%
ggplot(aes(x=rating,color = country, fill = country))+
facet_wrap(~country)+
geom_density()+
theme_classic()
fulldata %>%
mutate(rating = as.numeric(rating)) %>%
mutate(trait = as.factor(trait)) %>%
mutate(country = as.factor(country)) %>%
drop_na(country) %>%
filter(country != "--") %>%
ggplot(aes(x=rating,color = country, fill = country))+
facet_wrap(~country)+
geom_density()+
theme_classic()
