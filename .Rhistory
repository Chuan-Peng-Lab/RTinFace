rf_importance
rf_importance
str(rf_importance)
rf_importance %>%
ggplot(aes(x=Named num))+
rf_importance <- importance(rf)
importance_df <- data.frame(feature = names(rf$variable.importance),
importance = rf$variable.importance)
ggplot(importance_df, aes(x = feature, y = importance)) +
geom_bar(stat = "identity", fill = "steelblue") +
ggtitle("Feature Importance Plot") +
xlab("Features") +
ylab("Importance")
rf_importance <- importance(rf)
importance_df <- data.frame(feature = names(rf$variable.importance),
importance = rf$variable.importance)
ggplot(importance_df, aes(x = feature, y = importance)) +
geom_bar(stat = "identity", fill = "steelblue") +
ggtitle("Feature Importance Plot") +
coord_flip()+
xlab("Features") +
ylab("Importance")
rf_importance <- importance(rf)
importance_df <- data.frame(feature = names(rf$variable.importance),
importance = rf$variable.importance)
ggplot(importance_df, aes(x = feature, y = reorder(importance))) +
geom_bar(stat = "identity", fill = "steelblue") +
ggtitle("Feature Importance Plot") +
coord_flip()+
xlab("Features") +
ylab("Importance")
rf_importance <- importance(rf)
importance_df <- data.frame(feature = names(rf$variable.importance),
importance = rf$variable.importance)
ggplot(importance_df, aes(x = feature, y = reorder.default(importance))) +
geom_bar(stat = "identity", fill = "steelblue") +
ggtitle("Feature Importance Plot") +
coord_flip()+
xlab("Features") +
ylab("Importance")
rf_importance <- importance(rf)
importance_df <- data.frame(feature = names(rf$variable.importance),
importance = rf$variable.importance)
ggplot(importance_df, aes(x = feature, y = reorder(importance))) +
geom_bar(stat = "identity", fill = "steelblue") +
ggtitle("Feature Importance Plot") +
coord_flip()+
xlab("Features") +
ylab("Importance")
rf_importance <- importance(rf)
importance_df <- data.frame(feature = names(rf$variable.importance),
importance = rf$variable.importance)
ggplot(importance_df, aes(x = feature, y = importance)) +
geom_bar(stat = "identity", fill = "steelblue") +
ggtitle("Feature Importance Plot") +
coord_flip()+
xlab("Features") +
ylab("Importance")
rf_importance <- importance(rf)
importance_df <- data.frame(feature = names(rf$variable.importance),
importance = rf$variable.importance)
ggplot(importance_df, aes(x = reorder(feature,importance), y = importance)) +
geom_bar(stat = "identity", fill = "steelblue") +
ggtitle("Feature Importance Plot") +
coord_flip()+
xlab("Features") +
ylab("Importance")
rf_importance <- importance(rf)
importance_df <- data.frame(feature = names(rf$variable.importance),
importance = rf$variable.importance)
ggplot(importance_df, aes(x = reorder(feature,importance), y = importance)) +
geom_bar(stat = "identity", fill = "steelblue") +
ggtitle("Feature Importance Plot") +
coord_flip()+
xlab("Features") +
geom_text(aes(label = y), vjust = -0.5)+
ylab("Importance")
rf_importance <- importance(rf)
importance_df <- data.frame(feature = names(rf$variable.importance),
importance = rf$variable.importance)
ggplot(importance_df, aes(x = reorder(feature,importance), y = importance)) +
geom_bar(stat = "identity", fill = "steelblue") +
ggtitle("Feature Importance Plot") +
coord_flip()+
xlab("Features") +
geom_text(aes(label = importance), vjust = -0.5)+
ylab("Importance")
rf_importance <- importance(rf)
importance_df <- data.frame(feature = names(rf$variable.importance),
importance = rf$variable.importance)
ggplot(importance_df, aes(x = reorder(feature,importance), y = importance)) +
geom_bar(stat = "identity", fill = "steelblue") +
ggtitle("Feature Importance Plot") +
coord_flip()+
xlab("Features") +
geom_text(aes(label = importance), size=1)+
ylab("Importance")
rf_importance <- importance(rf)
importance_df <- data.frame(feature = names(rf$variable.importance),
importance = rf$variable.importance)
ggplot(importance_df, aes(x = reorder(feature,importance), y = importance)) +
geom_bar(stat = "identity", fill = "steelblue") +
ggtitle("Feature Importance Plot") +
coord_flip()+
xlab("Features") +
geom_text(aes(label = importance), size=6)+
ylab("Importance")
rf_importance <- importance(rf)
importance_df <- data.frame(feature = names(rf$variable.importance),
importance = rf$variable.importance)
ggplot(importance_df, aes(x = reorder(feature,importance), y = importance)) +
geom_bar(stat = "identity", fill = "steelblue") +
ggtitle("Feature Importance Plot") +
coord_flip()+
xlab("Features") +
geom_text(aes(label = importance), size=6, hjust = 1.2)+
ylab("Importance")
rf_importance <- importance(rf)
importance_df <- data.frame(feature = names(rf$variable.importance),
importance = rf$variable.importance)
ggplot(importance_df, aes(x = reorder(feature,importance), y = importance)) +
geom_bar(stat = "identity", fill = "steelblue") +
ggtitle("Feature Importance Plot") +
coord_flip()+
xlab("Features") +
geom_text(aes(label = importance), size=3, hjust = 1.1)+
ylab("Importance")
rf_importance <- importance(rf)
importance_df <- data.frame(feature = names(rf$variable.importance),
importance = rf$variable.importance)
ggplot(importance_df, aes(x = reorder(feature,importance), y = importance)) +
geom_bar(stat = "identity", fill = "steelblue") +
ggtitle("Feature Importance Plot") +
coord_flip()+
xlab("Features") +
geom_text(aes(label = importance), size=3, hjust = 1)+
ylab("Importance")
rf_importance <- importance(rf)
importance_df <- data.frame(feature = names(rf$variable.importance),
importance = rf$variable.importance)
ggplot(importance_df, aes(x = reorder(feature,importance), y = importance)) +
geom_bar(stat = "identity", fill = "steelblue") +
ggtitle("Feature Importance Plot") +
coord_flip()+
xlab("Features") +
geom_text(aes(label = importance), size=3, hjust = 0.8)+
ylab("Importance")
set.seed(1122)
ranger_model <- fulldata %>%
select(rating, rt, Race, Gender, Age, trait)
rf <- ranger(dependent.variable.name = "rating",
data = ranger_model, # 指定训练数据集
num.trees = 1000, # 指定树的数量
mtry = 3, # 指定每个树节点随机选择的属性数量
importance = "permutation",  # 指定特征重要性估计的方法
sample.fraction = 0.7,  # 指定随机采样的比例
verbose = TRUE
)
summary(rf)
rf_importance <- importance(rf)
importance_df <- data.frame(feature = names(rf$variable.importance),
importance = rf$variable.importance)
ggplot(importance_df, aes(x = reorder(feature,importance), y = importance)) +
geom_bar(stat = "identity", fill = "steelblue") +
ggtitle("Feature Importance Plot") +
coord_flip()+
xlab("Features") +
geom_text(aes(label = importance), size=3, hjust = 0.8)+
ylab("Importance")
xgb_matrix <- xgb.DMatrix(data = as.matrix(ranger_model[, -1]), label = ranger_model$rating)
?gamlss.control
library("tidyverse")
library("gamlss")
library(broom.mixed)
library(haven)
library(kableExtra)
library("tidyverse")
library("gamlss")
library(broom.mixed)
library(haven)
library(kableExtra)
?gamlss.control
rt <- read.csv("./data/rt_tidy.csv")
View(rt)
?gamlss
View(rt)
model_exguasian <- rt %>%
gamlss(formula = rating ~ rt,
family = exGAUS()
)
rt <- read.csv("./data/rt_tidy.csv")
model_exguasian <- rt %>%
gamlss(formula = rt ~ rating,
family = exGAUS()
)
model_exguasian <- rt %>%
gamlss(formula = rt ~ rating,
family = exGAUS()
)
model_exguasian <- rt %>%
gamlss(formula = rt ~ rating,
data = rt
family = exGAUS()
model_exguasian <- rt %>%
gamlss(formula = rt ~ rating,
data = rt,
family = exGAUS()
)
model_exguasian <- rt %>%
select(rt,rating) %>%
na.omit() %>%
gamlss(formula = rt ~ rating,
data = rt,
family = exGAUS()
)
model_exguasian <- rt %>%
select(rt,rating) %>%
na.omit() #%>%
model_exguasian <- rt %>%
dplyr::select(rt,rating) %>%
na.omit() #%>%
# gamlss(formula = rt ~ rating,
data = rt,
View(model_exguasian)
View(model_exguasian)
model_exguasian <- rt %>%
dplyr::select(rt,rating) %>%
na.omit() %>%
gamlss(formula = rt ~ rating,
data = rt,
family = exGAUS()
)
model_exguasian <- rt %>%
dplyr::select(rt,rating) %>%
na.omit(model_exguasian) %>%
gamlss(formula = rt ~ rating,
data = rt,
family = exGAUS()
)
model_exguasian <- rt %>%
dplyr::select(rt,rating) %>%
gamlss(formula = rt ~ rating,
data = rt,
na.omit(model_exguasian),
family = exGAUS()
)
model_exguasian <- rt %>%
dplyr::select(rt,rating) %>%
na.omit(model_exguasian)# %>%
#gamlss(formula = rt ~ rating,
#       data = rt,
#       family = exGAUS()
#       )
View(rt)
#gamlss(formula = rt ~ rating,
#       data = rt,
#       family = exGAUS()
#       )
is.na(model_exguasian)
#gamlss(formula = rt ~ rating,
#       data = rt,
#       family = exGAUS()
#       )
unique(is.na(model_exguasian))
#gamlss(formula = rt ~ rating,
#       data = rt,
#       family = exGAUS()
#       )
unique(is.na(model_exguasian))
model_exguasian <- rt %>%
dplyr::select(rt,rating) %>%
na.omit(model_exguasian)# %>%
gamlss(formula = rt ~ rating,
data = .,
family = exGAUS()
)
model_exguasian <- rt %>%
dplyr::select(rt,rating) %>%
na.omit(model_exguasian)# %>%
gamlss(formula = rt ~ rating,
data = model_exguasian,
family = exGAUS()
)
summary(model_exguasian)
model_exguasian <- rt %>%
dplyr::select(rt,rating) %>%
na.omit(model_exguasian) %>%
gamlss(formula = rt ~ rating,
data = model_exguasian,
family = exGAUS()
)
summary(model_exguasian)
model_exguasian <- rt %>%
dplyr::select(rt,rating) %>%
na.omit(model_exguasian) %>%
gamlss(formula = rt ~ rating + Gender + Race,
data = model_exguasian,
family = exGAUS()
)
model_exguasian <- rt %>%
dplyr::select(rt,rating,Gender,Race) %>%
na.omit(model_exguasian) %>%
gamlss(formula = rt ~ rating + Gender + Race,
data = model_exguasian,
family = exGAUS()
)
model_exguasian <- rt %>%
dplyr::select(rt,rating,Gender,Race) %>%
na.omit(model_exguasian) %>%
gamlss(formula = rt ~ rating + Gender + Race,
data = model_exguasian,
family = exGAUS()
)
rt <- read.csv("./data/rt_tidy.csv")
model_exguasian <- rt %>%
dplyr::select(rt,rating,Gender,Race) %>%
na.omit(model_exguasian) %>%
gamlss(formula = rt ~ rating + Gender + Race,
data = model_exguasian,
family = exGAUS()
)
model_exguasian <- rt %>%
dplyr::select(rt,rating,Gender,Race) %>%
na.omit(model_exguasian) #%>%
gamlss(formula = rt ~ rating + Gender + Race,
data = model_exguasian,
family = exGAUS()
)
model_exguasian <- rt %>%
dplyr::select(rt,rating,Gender,Race) %>%
na.omit(model_exguasian) %>%
gamlss(formula = rt ~ rating + Gender + Race,
data = model_exguasian,
family = exGAUS()
)
summary(model_exguasian)
con <- gamlss.control(n.cyc = 750)
View(con)
model_exguasian <- rt %>%
dplyr::select(rt,rating,Gender,Race) %>%
na.omit(model_exguasian) %>%
gamlss(formula = rt ~ rating + Gender + Race,
sigma.formula = rt ~ rating + Gender + Race,
nu.formula = rt ~ rating + Gender + Race,
data = model_exguasian,
family = exGAUS(),
mu.start = 0.5,k=6,control=con,data = na.omit(DFNoErrors)
)
model_exguasian <- rt %>%
dplyr::select(rt,rating,Gender,Race) %>%
na.omit(model_exguasian) %>%
gamlss(formula = rt ~ rating + Gender + Race,
sigma.formula = rt ~ rating + Gender + Race,
nu.formula = rt ~ rating + Gender + Race,
data = model_exguasian,
family = exGAUS(),
control=con,data = na.omit(DFNoErrors)
)
model_exguasian <- rt %>%
dplyr::select(rt,rating,Gender,Race) %>%
na.omit(model_exguasian) %>%
gamlss(formula = rt ~ rating + Gender + Race,
sigma.formula = rt ~ rating + Gender + Race,
nu.formula = rt ~ rating + Gender + Race,
data = model_exguasian,
family = exGAUS(),
control=con
)
model_exguasian <- rt %>%
dplyr::select(rt,rating,Gender,Race) %>%
gamlss(formula = rt ~ rating + Gender + Race,
sigma.formula = rt ~ rating + Gender + Race,
nu.formula = rt ~ rating + Gender + Race,
data = model_exguasian,
family = exGAUS(),
control = con,
data = na.omit(model_exguasian)
)
model_exguasian <- rt %>%
dplyr::select(rt,rating,Gender,Race) %>%
gamlss(formula = rt ~ rating + Gender + Race,
sigma.formula = rt ~ rating + Gender + Race,
nu.formula = rt ~ rating + Gender + Race,
data = na.omit(model_exguasian),
family = exGAUS(),
control = con
)
model_exguasian <- rt %>%
dplyr::select(rt,rating,Gender,Race) %>%
gamlss(formula = rt ~ rating + Gender + Race,
sigma.formula = rt ~ rating + Gender + Race,
nu.formula = rt ~ rating + Gender + Race,
data = na.omit(model_exguasian),
family = exGAUS()
)
model_exguasian <- rt %>%
dplyr::select(rt,rating,Gender,Race) %>%
gamlss(formula = rt ~ rating + Gender + Race,
sigma.formula = rt ~ rating + Gender + Race,
nu.formula = rt ~ rating + Gender + Race,
data = na.omit(model_exguasian),
family = exGAUS(),
control = con
)
model_exguasian <- rt %>%
dplyr::select(rt,rating,Gender,Race) #%>%
model <- gamlss(formula = rt ~ rating + Gender + Race,
sigma.formula = rt ~ rating + Gender + Race,
nu.formula = rt ~ rating + Gender + Race,
data = na.omit(model_exguasian),
family = exGAUS(),
control = con
)
summary(model_exguasian)
summary(model)
library(usethis)
usethis::edit_r_environ(scope = "project")
library("devtools")
devtools::install_github("MichelNivard/gptstudio")
devtools::install_github("MichelNivard/gptstudio")
gptstudio::addin_chatgpt()
gptstudio::addin_chatgpt()
Sys.setenv(OPENAI_API_KEY = "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")
gptstudio::addin_chatgpt()
download.file("https://cran.r-project.org/src/contrib/openai_0.3.0.tar.gz","openai_0.3.0.tar.gz")
devtools:::document()
gptstudio::addin_chatgpt()
library("tidyverse")
library("gamlss")
library(broom.mixed)
library(kableExtra)#print table
con <- gamlss.control(n.cyc = 750)
rt <- read.csv("./data/rt_tidy.csv")
model_exguasian <- rt %>%
dplyr::select(rt,rating,Gender,Race) #%>%
model <- gamlss(formula = rt ~ rating + Gender + Race,
sigma.formula = rt ~ rating + Gender + Race,
nu.formula = rt ~ rating + Gender + Race,
data = na.omit(model_exguasian),
family = exGAUS(),
control = con
)
summary(model)
summary(model)
View(model_exguasian)
View(model)
library("tidyverse")
library("gamlss")
library(broom.mixed)
library(kableExtra)#print table
con <- gamlss.control(n.cyc = 750)
rt <- read.csv("./data/rt_tidy.csv")
model_exguasian <- rt %>%
dplyr::select(rt,rating,Gender,Race) #%>%
model <- gamlss(formula = rt ~ rating + Gender + Race,
sigma.formula = rt ~ rating + Gender + Race,
nu.formula = rt ~ rating + Gender + Race,
data = na.omit(model_exguasian),
family = exGAUS(),
control = con
)
summary(model)
model
summary(model)
library("tidyverse")
library("gamlss")
summary(model)
View(model)
chatgpt:::run_addin_ask_chatgpt()
chatgpt:::run_addin_ask_chatgpt()
library(tidyverse)
library(bruceR)
rawdata <- read.csv("./data/rt_tidy.csv")
View(rawdata)
rownames(rawdata)
colnames(rawdata)
rawdata <- rawdata %>%
dplyr::select(trait, rt, rating, sex, age, ethnicity.y, gender) %>%
na.omit()
rawdata <- read.csv("./data/rt_tidy.csv")
rawdata <- rawdata %>%
dplyr::select(trait, rt, rating, sex, age, ethnicity.y, gender) %>%
na.omit()
rawdata <- rawdata %>%
mutate(rt_centered = rt - mean(rt)) %>%
mutate(rating_centered = rating - mean(rating))
HGLM_model <- lmer(formula = rating ~ rt + trait +trait*rt
+ sex + age + ethnicity.y + gender,
data = rawdata
)
HGLM_model <- lmer(formula = rating ~ rt + trait +trait*rt
+ sex + age + ethnicity.y + gender+
(1 + rt | trait),
data = rawdata
)
HLM_summary(HGLM_model)
HGLM_model <- lmer(formula = rating ~ rt_centered + trait +trait*rt_centered
+ sex + age + ethnicity.y + gender+
(1 + rt_centered | trait),
data = rawdata
)
HLM_summary(HGLM_model)
HGLM_model <- lmer(formula = rating ~ rt_centered + trait*rt_centered +
(1 + rt_centered | trait),
data = rawdata
)
HLM_summary(HGLM_model)
HGLM_model <- lmer(formula = rating ~ rt_centered +
(1 + rt_centered | trait),
data = rawdata
)
HLM_summary(HGLM_model)
